fnc power(base: Int, exponent: Int): Int {
    let result: Int = 1
    loop (i, 1 to exponent) {
        result := result * base
    }
    | result
}

fnc sqrt(x: Int): Float {
    caso___native_java_start
    return (float)Math.sqrt(x);
    caso___native_java_end
}

fnc log(x: Float): Float {
    caso___native_java_start
    return (float)Math.log(x);
    caso___native_java_end
}

fnc sin(angle: Float): Float {
    caso___native_java_start
    return (float)Math.sin(angle);
    caso___native_java_end
}

fnc cos(angle: Float): Float {
    caso___native_java_start
    return (float)Math.cos(angle);
    caso___native_java_end
}

fnc tan(angle: Float): Float {
    caso___native_java_start
    return (float)Math.tan(angle);
    caso___native_java_end
}

